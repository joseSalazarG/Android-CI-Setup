name: Pruebas de Automatización creando la APK

# Define los eventos que activarán el workflow
on:
  push:
    branches: [ main ] # Ejecuta el workflow en pushes a la rama main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Configura el entorno de Flutter
      - name: Setup Flutter SDK
        uses: flutter-actions/setup-flutter@v3
        with:
          channel: stable
          version: 3.24.3     # Preferiblemente, la version de flutter que se esta utilizando en el proyecto de desarrollo

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      # Realiza el checkout del código fuente de los desarrolladores
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          repository: owner/repository_name     # nombre del dueño y nombre del repositorio
          ref: main                             # nombre de la rama que se va a clonar
          token: ${{ secrets.SECRET_TOKEN }}    # token de autenticación (classic) para clonar el repositorio en caso de no ser publico

      # Realiza la build de la apk con flutter
      - name: Build APK
        run: flutter build apk --release

      # Guarda la apk como un artefacto del workflow
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/app-release.apk

  ##############################################################################################################

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Realiza el checkout de nuestro código fuente
      - name: Checkout Code
        uses: actions/checkout@v4

      # Instala Java 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      # Agrega a nuestro entorno la APK generada en el job anterior
      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: app-release
          path: src/test/resources/

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm     

      # Instala appium
      - name: setup appium
        run: |
          npm install i -g appium
          appium driver install uiautomator2

      # Instala y ejecuta un emulador y los tests y genera reporte, filtrando por la etiqueta @Login
      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: google_apis
          arch: x86_64
          profile: pixel_6
          script: mvn test "-Dcucumber.filter.tags=@test"

      # Comprime los reportes y capturas de pantalla en un archivo ZIP
      - name: Compress report and screenshots into a ZIP file
        run: |
          zip -r reporte-automatizacion.zip "Reporte de Automatizacion 0"

      # Sube el archivo ZIP como un artefacto del workflow
      - name: Upload Extent Report ZIP
        uses: actions/upload-artifact@v4
        with:
          name: extent-report-zip
          path: reporte-automatizacion.zip

      # Envia un email con el reporte adjunto
      - name: Send email with zipped report
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.SECRET_EMAIL }} # Usa secretos para la autenticación
          password: ${{ secrets.SECRET_PASSWORD }}
          subject: Resultados de Automatización
          body: Se adjuntan los resultados de la última ejecución de pruebas.
          from: ${{ secrets.SECRET_EMAIL }}
          to: ${{ secrets.SECRET_EMAIL }}
          ignore_cert: true
          attachments: reporte-automatizacion.zip
